<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.0</TargetFramework>
		<IncludeOpenAPIAnalyzers>true</IncludeOpenAPIAnalyzers>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <RootNamespace>AspDotnetVueJs</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
      <DocumentationFile>obj\Debug\netcoreapp3.0\AspDotnetVueJs.xml</DocumentationFile>
      <OutputPath></OutputPath>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="3.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
        <PackageReference Include="Serilog" Version="2.9.0" />
        <PackageReference Include="Serilog.Extensions.Logging" Version="3.0.1" />
        <PackageReference Include="Serilog.AspNetCore" Version="3.1.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
        <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />
        <PackageReference Include="Serilog.Sinks.RollingFile" Version="3.3.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0-rc4" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="5.0.0-rc4" />
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.4.0" />
        <PackageReference Include="Westwind.AspnetCore.LiveReload" Version="0.1.5.4" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="wwwroot\dist\0.js" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\0.js.map" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\1.js" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\1.js.map" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\fonts\element-icons.2fad952a.woff" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\fonts\element-icons.6f0a7632.ttf" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\main.js" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\main.js.map" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\vendor.js" />
      <_ContentIncludedByDefault Remove="wwwroot\dist\vendor.js.map" />
      <_ContentIncludedByDefault Remove="wwwroot\favicon.ico" />
      <_ContentIncludedByDefault Remove="wwwroot\index.html" />
      <_ContentIncludedByDefault Remove="wwwroot\static\ie-polyfill.min.js" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <!-- Install modules -->
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <!-- Deploy in development mode the packed files -->
        <Message Importance="high" Text="Publishing webpack files" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
        <Message Importance="high" Text="Publishing webpack files" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:dev" />
    </Target>

    <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec Command="node -e &quot;console.log('NPM Installing dependencies...')&quot;" />
		<Exec Command="npm install" />
		<Exec Command="npm run build:prod" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="wwwroot\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="" /></VisualStudio></ProjectExtensions>

</Project>
